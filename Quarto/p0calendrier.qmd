---
title: ""
format: html
editor: visual
execute:
  echo: false
---

## Calendrier {{< var saison >}}

{{< include _lectureCSV.qmd >}}

```{r calendrier,echo=FALSE,warning=FALSE,message=FALSE}
#, warning=TRUE,message=TRUE,results='hide'

 
#Création des points par parties par joueurs
calendrierDetailJoueurs <- merge(RépondantsParJoueurs,joueurs, by = c("NoÉquipe", "NoJoueur") )   
calendrierDetailJoueurs <- merge(calendrierDetailJoueurs,équipes, by = c("NoÉquipe")) 
calendrierDetailJoueurs <- calendrierDetailJoueurs[,c("NoPartie", "PrénomJoueur","NomJoueur","NomÉquipe","Points")] 
calendrierDetailJoueurs <- calendrierDetailJoueurs %>% 
  arrange(NoPartie, desc(Points)) %>% 
  mutate(
    NomComplet = ifelse(NomJoueur == NomÉquipe, paste(NomJoueur, "(Équipe)", sep = " "), paste(PrénomJoueur, NomJoueur, sep = " "))
  ) %>% 
  select(NoPartie ,NomComplet,NomÉquipe,Points)

#Création des colonnes Calendrier:

#Ajout du nom de l'équipe pour le questionnaire, équipe A et B
calendrier <- left_join(calendrier, équipes, by = c("NoÉquipeQuestionnaire" = "NoÉquipe")) %>% 
  rename(NomÉquipeQuestionnaire = NomÉquipe)

# Création d'une colonne pour combiner l'animateur et le lien de la console.
AnimateurConsole <- colDef(
  name = "Animateur (lien console)",
  cell = function(value, index, column_name) {
    # Création de l'URL.
    url <- calendrier[index, "LienConsole"]
    # Création du texte html.
    htmltools::tags$a(href = url, target = "_blank", value)
  }
)

#Création du lien vers le questionnaire
LienQuestionnaire <- colDef(
  name = "Questionnaire",
  cell = function(value, index, column_name) {
    if (!is.na(value)) {
      url2 <- paste0(lien_questionnaire,"match",calendrier[index, "NoPartie"],".htm")
      htmltools::tags$a(href = url2, target = "_blank", value)
    } else  {
      # Sinon, ne rien afficher
      htmltools::em("")
    }
  }
)


#Ordre et sélection des colonnes
  #Il faut enlver les colonnes utilisé pour les URL
  NomColonneAExclure <- c("LienConsole","NoQuestionnaire")
  calendrier <- calendrier %>%
    select("NoPartie", "Date", "NomÉquipeA","PointsA","PointsB", "NomÉquipeB", "NomÉquipeQuestionnaire", "NomAnimateur", "LienReunion", "LienBouton","NoQuestionnaire","LienConsole")


  
#Tableau principal
reactable(
  #Il faut enlver les colonnes utilisé pour les URL
  calendrier[, !(names(calendrier) %in% NomColonneAExclure)], #exclusion de la colonne LienConsole
  bordered = FALSE,
  highlight = TRUE,
  striped = TRUE,
  pagination = FALSE,
  searchable = TRUE,

  #theme : Permet plus de personnalisation de reactable. Requis pour mettre la recherche à gauche.
  theme = reactableTheme(
    cellPadding = "2px 5px",
    searchInputStyle = list(width = "100%")
    ),

  #valeurs par défaut pour les colonnes
  defaultColDef = colDef(
    align = "left",
    minWidth = 20,
    headerStyle = list(background = "#f7f7f8")
  ),
  columns = list(
    # overrides the default
    "NoPartie" = colDef(name = "#", align="center", maxWidth =  40),
    "Date" = colDef(maxWidth =  120),
    "NomÉquipeA" =  colDef(name = "Équipe A",maxWidth = 250, align="right"),
    "NomÉquipeB" =  colDef(name = "Équipe B",maxWidth = 250, align="left"),
    "PointsA" =   colDef(name = "Pts",
                         align = "left",
                         maxWidth = 50,
                         cell = function(value, index) {
                           if (!is.na(value) && value > 0) {
                             htmltools::strong(format(value, nsmall = 2))
                           } else {
                             htmltools::em("")
                           }
                         }
                       ),
    "PointsB" =   colDef(name = "Pts",
                         align = "center",
                         maxWidth = 50,
                         cell = function(value, index) {
                           if (!is.na(value) && value > 0) {
                             htmltools::strong(format(value, nsmall = 2))
                           } else {
                             htmltools::em("")
                           }
                         }
                       ),
    "NomÉquipeQuestionnaire" = LienQuestionnaire,
    "LienBouton" = colDef(cell = function(value, index) {
      Texte <- sprintf("%s%s",  "Lien joueur #", index)
      htmltools::tags$a(href = value, target = "_blank", Texte)
    }),
    
    "LienReunion" = colDef(
      name = "Lien Réunion",
      cell = function(value, index) {
        if (!is.na(value) && grepl("^https?://", value)) {
          Texte <- sprintf("Lien Teams #%s", index)
          htmltools::tags$a(href = value, target = "_blank", Texte)
        } else {
          htmltools::em("Lien non disponible")
        }
      }
    ),
    
    # "LienReunion" = colDef(cell = function(value, index) {
    #   Texte <- sprintf("%s%s",  "Lien Teams #", index)
    #   htmltools::tags$a(href = value, target = "_blank", Texte)
    # },name = "Lien Réunion"),

    "NomAnimateur" = AnimateurConsole 
  ),

 # Définition de la fonction details pour fournir un contenu personnalisé
  details = function(index) {
    detailcalendrier <- calendrierDetailJoueurs[calendrierDetailJoueurs$NoPartie == calendrier$NoPartie[index], ]
    if (nrow(detailcalendrier) > 0) {

      # Exclure la colonne "NoPartie" de la section "details"
      detailcalendrier <- detailcalendrier[, !(names(detailcalendrier) %in% "NoPartie")]

      htmltools::div(style = "padding: 1rem",
                      reactable(detailcalendrier,
                                outlined = TRUE,
                                theme = reactableTheme(
                                  cellPadding = "2px 5px"
                                  ),
                                columns = list(
                                  "NomComplet" = colDef(name = "Joueur", maxWidth =  270),
                                  "NomÉquipe" = colDef(name = "Équipe", maxWidth =  250),
                                  "Points" = colDef(name = "Pts", maxWidth =  50)
                                  )
                                )
                      )
      } else {
        ""  # Si aucun détail n'est disponible, renvoyer une chaîne vide
      }
    }
 )


```

*Vous voyez une erreur :* [{{< var email.support >}}](mailto:{{< var email.support >}})
