---
execute:
  echo: false
---

{{< include _initialisation.qmd >}}

```{r}
#| warning: false
#| message : false
#| results : hide


# Lecture des CSV (tables)
  équipes <- read.csv(file_path_équipes, header = TRUE, sep = ",") %>% arrange(NoÉquipe)
  parties <- read.csv(file_path_parties, header = TRUE, sep = ",") %>% arrange(NoPartie)
  joueurs <- read.csv(file_path_joueurs, header = TRUE, sep = ",") %>% arrange(NoÉquipe, NoJoueur)
  
#Vérification de la présence du fichier tblRépondantsParJoueurs.csv pour vérifier si la saison est commencée
fichierRépondantsParJoueursPrésent <- file.exists(file_path_RépondantsParJoueurs)  
if (fichierRépondantsParJoueursPrésent) {
  RépondantsParJoueurs <- read.csv(file_path_RépondantsParJoueurs, header = TRUE, sep = ",") %>% arrange(NoPartie, NoÉquipe) }

# Calendrier fait ici car requis pour le classement.
  calendrier <- merge(parties, équipes, by.x = "NoÉquipeA", by.y = "NoÉquipe")
  calendrier <- merge(calendrier, équipes, by.x = "NoÉquipeB", by.y = "NoÉquipe", suffixes = c("A", "B"))

# Ajout des points des équipes
  # Vérifiez si le dataframe RépondantsParJoueurs a au moins 1 observation
if (!fichierRépondantsParJoueursPrésent) {
  # Créer un RépondantsParJoueurs avec une ligne...
  # Ajouter une ligne à RépondantsParJoueurs avec les valeurs 0 pour éviter que ça plante.
RépondantsParJoueurs <- data.frame(NoPartie = 0, NoÉquipe = 0, NoJoueur = 0, Points = 0)
    print("Une ligne bidon a été ajouté RépondantsParJoueurs.")
  
} 

ptsParPartieÉquipe <- aggregate(Points ~ NoPartie + NoÉquipe, data = RépondantsParJoueurs, FUN = sum) %>% arrange(NoPartie, NoÉquipe)

    
  calendrier <- merge(calendrier, ptsParPartieÉquipe, by.x = c("NoPartie", "NoÉquipeA"), by.y = c("NoPartie", "NoÉquipe"), all.x = TRUE) %>% rename("PointsA" = "Points")
  calendrier <- merge(calendrier, ptsParPartieÉquipe, by.x = c("NoPartie", "NoÉquipeB"), by.y = c("NoPartie", "NoÉquipe"), all.x = TRUE) %>% 
  rename("PointsB" = "Points") %>%
  arrange(NoPartie)
  
  calendrier <- calendrier[, c("NoPartie", "Date", "NomÉquipeA", "PointsA", "NoÉquipeA", "NomÉquipeB", "PointsB", "NoÉquipeB","NoÉquipeQuestionnaire", "NoQuestionnaire", "NomAnimateur", "LienReunion", "LienConsole", "LienBouton")] %>%
  arrange(NoPartie)
  
# ****SÉRIES****

#Vérification de la présence du fichier tblParties_series.csv pour vérifier si c'est le temps des séries  
fichiersSériePrésents <- file.exists(file_path_parties_series)

if (fichiersSériePrésents) {
  
  print("Séries!")
  # Lecture des CSV (tables) SÉRIES
    parties_series <- read.csv(file_path_parties_series, header = TRUE, sep = ",") %>% arrange(NoPartie)
    RépondantsParJoueurs_series <- read.csv(file_path_RépondantsParJoueurs_series, header = TRUE, sep = ",") %>% arrange(NoPartie, NoÉquipe)
  
  # Calendrier fait ici car requis pour le classement.
    calendrier_series <- merge(parties_series, équipes, by.x = "NoÉquipeA", by.y = "NoÉquipe")
    calendrier_series <- merge(calendrier_series, équipes, by.x = "NoÉquipeB", by.y = "NoÉquipe", suffixes = c("A", "B"))
  
  # Ajout des points des équipes
    # Vérifiez si le dataframe RépondantsParJoueurs_series a au moins 1 observation. Il faut s'assurer qu'il y a eu des match de séries
  if (nrow(RépondantsParJoueurs_series) > 0) {
    ptsParPartieÉquipe_series <- aggregate(Points ~ NoPartie + NoÉquipe, data = RépondantsParJoueurs_series, FUN = sum) %>% arrange(NoPartie, NoÉquipe)
  
    calendrier_series <- merge(calendrier_series, ptsParPartieÉquipe_series, by.x = c("NoPartie", "NoÉquipeA"), by.y = c("NoPartie", "NoÉquipe"), all.x = TRUE) %>% rename("PointsA" = "Points")
    calendrier_series <- merge(calendrier_series, ptsParPartieÉquipe_series, by.x = c("NoPartie", "NoÉquipeB"), by.y = c("NoPartie", "NoÉquipe"), all.x = TRUE) %>% 
    rename("PointsB" = "Points") %>%
    arrange(NoPartie)
    
    calendrier_series <- calendrier_series[, c("NoPartie", "Date", "NomÉquipeA", "PointsA", "NoÉquipeA", "NomÉquipeB", "PointsB", "NoÉquipeB","NoÉquipeQuestionnaire", "NoQuestionnaire", "NomAnimateur", "LienReunion", "LienConsole", "LienBouton")] %>%
    arrange(NoPartie)  
  } else {
    # Affichez un message d'erreur ou effectuez une autre action appropriée
    print("Le dataframe RépondantsParJoueurs est vide. Les séries ne sont pas commencées!.")
  }
} else {
  print("Saison régulière")
}
    
```
